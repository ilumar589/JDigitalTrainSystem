server:
  port: 8080
  host: 0.0.0.0
  features:
    security:
      defaults:
        authenticate: false
      web-server:
        # protected paths on the web server - do not include paths served by Jersey, as those are protected directly
        paths:

app:
    greeting: "Hello"

tracing:
  service: helidon-tracing-service

db:
  source: jdbc
  connection:
    url: jdbc:mysql://127.0.0.1:3306/pokemon?useSSL=false
    username: user
    password: changeit
    initializationFailTimeout: -1
    connectionTimeout: 2000
  health-check:
    type: "query"
    statementName: "health-check"
  statements:
    health-check: "SELECT 0"
    create-types: "CREATE TABLE PokeTypes (id INTEGER NOT NULL PRIMARY KEY, name VARCHAR(64) NOT NULL)"
    create-pokemons: "CREATE TABLE Pokemons (id INTEGER NOT NULL PRIMARY KEY, name VARCHAR(64) NOT NULL, id_type INTEGER NOT NULL REFERENCES PokeTypes(id))"
    select-all-types: "SELECT id, name FROM PokeTypes"
    select-all-pokemons: "SELECT id, name, id_type FROM Pokemons"
    select-pokemon-by-id: "SELECT id, name, id_type FROM Pokemons WHERE id = :id"
    select-pokemon-by-name: "SELECT id, name, id_type FROM Pokemons WHERE name = ?"
    insert-type: "INSERT INTO PokeTypes(id, name) VALUES(?, ?)"
    insert-pokemon: "INSERT INTO Pokemons(id, name, id_type) VALUES(?, ?, ?)"
    update-pokemon-by-id: "UPDATE Pokemons SET name = :name, id_type = :idType WHERE id = :id"
    delete-pokemon-by-id: "DELETE FROM Pokemons WHERE id = :id"
    delete-all-types: "DELETE FROM PokeTypes"
    delete-all-pokemons: "DELETE FROM Pokemons"

security:
  config.require-encryption: false
  properties:
  providers:


